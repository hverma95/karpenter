apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: provisioner
spec:
  consolidation:
    enabled: false
  ttlSecondsAfterEmpty: 30    
  #ttlSecondsUntilExpired: 120 #EXpires the node after certain time period
  #ttlSecondsAfterEmpty: 30 # Evicts the node if empty after this interval
  labels:
    intent: apps
    role: worker-nodes
  taints:
    - key: node
      value: worker-nodes
      effect: NoSchedule
  requirements:
    - key: "topology.kubernetes.io/zone" 
      operator: In
      values: ["eu-west-1b","eu-west-1a"]
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["on-demand"]
    - key: kubernetes.io/arch
      operator: In
      values: ["amd64"]
    - key: node.kubernetes.io/instance-type
      operator: In
      values: ["c5a.4xlarge","c5.4xlarge"]
  limits:
    resources:
      cpu: ${CPU}
      memory: ${MEMORY}
  providerRef:
    name: node-provisioner-ref

---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: node-provisioner-ref
spec:
  amiFamily: AL2
  instanceProfile: ${INSTANCE_PROFILE}
  tags:
    Name: karpenter.sh/worker-node
    aws-node-termination-handler/managed: "true"
    karpenter.sh/nodegroup: "worker-node"

  subnetSelector:
    karpenter: "true"
  securityGroupSelector:
    karpenter: "true"
    Name: ${SG}
  amiSelector:
    aws-ids: ${ami_id}
